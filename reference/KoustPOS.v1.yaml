openapi: 3.0.0
info:
  title: Koust POS v1
  version: '1.0'
  contact:
    name: Koust Support
    url: 'https://koust.net/contact/'
    email: contact@koust.fr
  termsOfService: 'https://koust.net/conditions-generales-de-vente/'
  description: |-
    Use Koust API to create a custom integration with your POS.

    To use Koust API, you'll need to:

    - Use the access token ([see details](https://koust.stoplight.io/docs/koust-api-documentation/reference/Authentication.v1.yaml))

    If you have questions, we're available at [contact@koust.fr](mailto:contact@koust.fr) to help.
servers:
  - url: 'https://api.koustapp.com/apex/rest/public_api'
paths:
  /pos/catalog:
    parameters: []
    post:
      summary: Create catalog
      operationId: post-pos-catalog
      responses:
        '200':
          description: OK
      tags:
        - Catalogs
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      description: Use this endpoint to push your orders on Koust.
    put:
      summary: Update Catalog
      operationId: put-pos-catalog
      responses:
        '200':
          description: OK
      tags:
        - Catalogs
      parameters:
        - $ref: '#/components/parameters/Content-Type'
  /pos/order:
    parameters: []
    post:
      summary: Create Order
      operationId: post-pos-order
      responses:
        '200':
          description: OK
        '401':
          description: Cannot authenticate user
      tags:
        - Orders
      parameters:
        - $ref: ./Authentication.v1.yaml#/components/parameters/Content-Type
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order-Model'
      description: Create an Order linked to your account.
      security:
        - oauth2: []
    delete:
      summary: Cancel Order
      operationId: delete-pos-order
      responses:
        '200':
          description: OK
      tags:
        - Orders
components:
  schemas:
    Order-Model:
      description: Informations about the order
      type: object
      x-examples:
        Order Scope:
          id_cash_register: 0
          tickets:
            - ticket_id: 2535
              ticket_date: '2021-01-18'
              dishes:
                - dish_id: 1841
                  dish_name: Tiramisu speculoos
                  dish_price_excl_tax: 10
                  dish_vat: 0.2
                  dish_quantity: 1
                  dish_canceled_reason: 1
                  dish_options:
                    - option_id: A120
                      option_name: Cocoa supplement
                      option_quantity: 3
          discounts:
            - discount_name: 20%OFF
              discount_amount: 2
          charges:
            - charge_name: Delivery fee
              charge_amount: 1.99
      title: Order
      properties:
        id_cash_register:
          type: number
        tickets:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              ticket_id:
                type: number
              ticket_date:
                type: string
                minLength: 1
              dishes:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    dish_id:
                      type: number
                    dish_name:
                      type: string
                      minLength: 1
                    dish_price_excl_tax:
                      type: number
                    dish_vat:
                      type: number
                    dish_quantity:
                      type: number
                    dish_canceled_reason:
                      type: number
                    dish_options:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
                        properties:
                          option_id:
                            type: string
                            minLength: 1
                          option_name:
                            type: string
                            minLength: 1
                          option_quantity:
                            type: number
                        required:
                          - option_id
                          - option_name
                          - option_quantity
                  required:
                    - dish_id
                    - dish_name
                    - dish_price_excl_tax
                    - dish_quantity
            required:
              - ticket_id
              - ticket_date
        discounts:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              discount_name:
                type: string
                minLength: 1
              discount_amount:
                type: number
            required:
              - discount_amount
        charges:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              charge_name:
                type: string
                minLength: 1
              charge_amount:
                type: number
            required:
              - charge_amount
      required:
        - id_cash_register
        - tickets
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
      description: Resource MIME
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        default: ' Bearer YOUR_ACCESS_TOKEN'
      description: Authorization Header
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.koustapp.com/apex/rest/public_authentication/get_access_token'
          scopes: {}
          refreshUrl: 'https://api.koustapp.com/apex/rest/public_authentication/refresh_token'
tags:
  - name: Orders
  - name: Catalogs
