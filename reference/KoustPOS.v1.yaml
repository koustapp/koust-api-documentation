openapi: 3.0.0
info:
  title: Koust POS v1
  version: '1.0'
  contact:
    name: Koust Support
    url: 'https://koust.net/contact/'
    email: contact@koust.fr
  termsOfService: 'https://koust.net/conditions-generales-de-vente/'
  description: |-
    Use Koust API to create a custom integration with your POS.

    To use Koust API, you'll need to:

    - Use the access token ([see details](https://koust.stoplight.io/docs/koust-api-documentation/reference/Authentication.v1.yaml))

    If you have questions, we're available at [contact@koust.fr](mailto:contact@koust.fr) to help.
servers:
  - url: 'https://api.koustapp.com/apex/rest/public_api'
paths:
  /pos/catalog:
    parameters: []
    put:
      summary: Update Catalog
      operationId: put-pos-catalog
      responses:
        '200':
          description: OK
      tags:
        - Catalogs
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Authorization'
      description: Use this endpoint to update product informations
      security:
        - oauth2: []
  /pos/order:
    parameters: []
    post:
      summary: Create Order
      operationId: post-pos-order
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-Model'
        '400':
          description: An error occured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Model'
        '401':
          description: Cannot authenticate user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Model'
      tags:
        - Orders
      parameters:
        - $ref: ./Authentication.v1.yaml#/components/parameters/Content-Type
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order-Model'
            examples:
              Order Scope:
                value:
                  id_cash_register: 0
                  order_id: 72321axcF261
                  order_date: '2021-01-18'
                  tickets:
                    - ticket_id: '2517'
                      consumption_mode: 2
                      dishes:
                        - dish_id: '1839'
                          dish_name: Burger Veggie
                          dish_price_excl_tax: 10.81
                          dish_origin_price_excl_tax: 10.81
                          dish_vat: 0.1
                          dish_canceled_reason: 200
                          dish_quantity: 1
                          dish_options:
                            - option_id: '183209'
                              option_name: Moutarde
                              option_quantity: 1
                              option_price_excl_tax: 0
                    - ticket_id: '2517'
                      consumption_mode: 2
                      dishes:
                        - dish_id: '1581'
                          dish_name: Pizza 31cm
                          dish_price_excl_tax: 11.72
                          dish_origin_price_excl_tax: 11.72
                          dish_vat: 0.1
                          dish_canceled_reason: 200
                          dish_quantity: 1
                      global_discounts:
                        - discount_name: 20%OFF
                          discount_amount: 2
                      global_charges:
                        - charge_name: Delivery fee
                          charge_amount: 1.99
      description: |-
        **Create an Order linked to your account.**


        <!--
        type: tab
        title: Comsumption mode
        -->

        **Consumption mode** codes are :

        - **1** -> Delivery
        - **2** -> Take Away
        - **3** -> Eat in

        <!--
        type: tab
        title: Canceled reasons
        -->

        **Cancel reasons** codes are :

        - **0** -> Offered
        - **1** -> Loosed
        - **2** -> Employee

        <!-- type: tab-end -->
      security:
        - oauth2: []
    delete:
      summary: Cancel Order
      operationId: delete-pos-order
      tags:
        - Orders
      description: Delete an order
      responses:
        '204':
          description: Successfully deleted
        '400':
          description: An error has occured
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      parameters:
        - schema:
            type: string
          in: query
          name: order_id
          description: The order_id you used when creating the order
          required: true
        - $ref: '#/components/parameters/Authorization'
      security:
        - oauth2: []
  /pos/cash_registers:
    get:
      summary: List Cash Registers
      tags:
        - Cash Registers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cash-Register-Model'
        '401':
          description: Cannot authenticate user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Model'
      operationId: get-pos-cash_registers
      description: Use this endpoint to retrieve the list of availaible cash registers.
      security:
        - oauth2: []
      parameters:
        - $ref: '#/components/parameters/Authorization'
  /pos/last_order:
    get:
      summary: Last order informations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  last_closure_id:
                    type: string
                    minLength: 1
                  last_closure_date:
                    type: string
                    minLength: 1
                  total_tickets_for_this_closure:
                    type: number
                required:
                  - last_closure_id
                  - last_closure_date
                  - total_tickets_for_this_closure
              examples:
                Example:
                  value:
                    last_closure_id: '20210118141453'
                    last_closure_date: '2021-01-18T00:00:00Z'
                    total_tickets_for_this_closure: 898
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Model'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Model'
      operationId: get-pos-last_closure
      tags:
        - Orders
      security:
        - oauth2: []
      parameters:
        - schema:
            type: number
          in: header
          name: cash_register_id
          required: true
      description: |-
        Use this endpoint to check informations about the last order you imported.

        Can be used to verify that no orders are missing in Koust.
    parameters: []
components:
  schemas:
    Order-Model:
      description: A configuration for an order
      type: object
      title: Order
      properties:
        id_cash_register:
          type: number
        order_id:
          type: string
          minLength: 1
        order_date:
          type: string
          minLength: 1
        tickets:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              ticket_id:
                type: string
                minLength: 1
              consumption_mode:
                type: number
              dishes:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    dish_id:
                      type: string
                      minLength: 1
                    dish_name:
                      type: string
                      minLength: 1
                    dish_price_excl_tax:
                      type: number
                    dish_origin_price_excl_tax:
                      type: number
                    dish_vat:
                      type: number
                    dish_canceled_reason:
                      type: number
                    dish_quantity:
                      type: number
                    dish_options:
                      type: array
                      items:
                        type: object
                        properties:
                          option_id:
                            type: string
                          option_name:
                            type: string
                          option_quantity:
                            type: number
                          option_price_excl_tax:
                            type: number
                        required:
                          - option_id
                          - option_name
                          - option_quantity
                          - option_price_excl_tax
                  required:
                    - dish_id
                    - dish_name
                    - dish_price_excl_tax
                    - dish_quantity
              global_discounts:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    discount_name:
                      type: string
                      minLength: 1
                    discount_amount:
                      type: number
                  required:
                    - discount_amount
              global_charges:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    charge_name:
                      type: string
                      minLength: 1
                    charge_amount:
                      type: number
                  required:
                    - charge_amount
            required:
              - ticket_id
      required:
        - id_cash_register
        - order_id
        - order_date
        - tickets
    Error-Model:
      title: Error-Model
      type: object
      properties:
        message:
          type: string
      description: The error object you'll receive when something went wrong.
    Cash-Register-Model:
      title: Cash-Register-Model
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      description: The error object you'll receive when something went wrong.
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
      description: Resource MIME
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        default: ' Bearer YOUR_ACCESS_TOKEN'
      description: Authorization Header
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://auth.koustapp.com/apex/rest/public_authentication/get_access_token'
          scopes: {}
          refreshUrl: 'https://auth.koustapp.com/apex/rest/public_authentication/refresh_token'
tags:
  - name: CashRegisters
  - name: Catalogs
  - name: Orders
